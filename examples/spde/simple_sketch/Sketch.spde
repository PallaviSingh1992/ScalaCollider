import de.sciss.synth.{ action => saction, _ } // action already used by p5
import ugen._

size(200, 200)
var so: Option[ Server ] = None
Server.test { s =>
  val df = SynthDef( "test" ) {
    val sig = Resonz.ar( WhiteNoise.ar( Seq( 1, 1 )), "freq".kr( 400 ), 0.1 )
    val env = EnvGen.ar( Env.perc(), doneAction = freeSelf )
    Out.ar( 0, sig * env )
  }
  df.recv( s, saction( so = Some( s )))
}

var xx = 0
var inc = 10
stroke(255)

def draw {
   background( 0 )
   line( xx, 0, xx, height - 1 )
   xx += inc
   if( xx <= 0 ) {
     ding( 400 )
     xx = 0
     inc *= -1
   } else if( xx >= width - 1 ) {
     ding( 600 )
     xx = width - 1
     inc *= -1
   }
}

def ding( freq: Float ) {
   so.foreach( Synth.play( "test", Seq( "freq" -> freq ), _ ))
}